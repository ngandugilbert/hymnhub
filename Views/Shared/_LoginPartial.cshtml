@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<i class="bi bi-person-fill" style="font-size: 30px;"></i>
<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        <div class="dropdown">
            <button class="btn dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                @User.Identity?.Name
            </button>
            <ul class="dropdown-menu">
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage">Account</a>
                </li>
                <li class="nav-item">
                    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Hymns", new { area = "" })">
                        <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
                    </form>
                </li>
            </ul>
        </div>
    
}
else
{
    
        <div class="dropdown">
            <button class="btn dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                Signin
            </button>
            <ul class="dropdown-menu">
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
                </li>
            </ul>
        </div>
    
        
}
</ul>
